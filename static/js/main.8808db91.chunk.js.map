{"version":3,"sources":["Components/Setting/Setting.module.css","Components/Counter/Counter.module.css","Components/Button/Button.tsx","Components/Counter/Counter.tsx","Components/Setting/Setting.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","title","disabled","onClick","Counter","number","startNumber","maxNumber","changeNumber","resetNumber","className","style","Screen","Max","Buttons","Setting","useState","setStartNumber","setMaxNumber","error","setError","setDisabled","useEffect","newStartNumber","localStorage","getItem","newMaxNumber","JSON","parse","setItem","stringify","giveTopic","giveError","giveDisabled","Error","type","value","onChange","e","currentTarget","changeStartMaxNumber","unDisabled","App","setNumber","newNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8808db91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Setting\":\"Setting_Setting__1e3qd\",\"Screen\":\"Setting_Screen__gnPDB\",\"Buttons\":\"Setting_Buttons__2kz2d\",\"Error\":\"Setting_Error__3Nxz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__2dceP\",\"Screen\":\"Counter_Screen__Z4ARm\",\"Buttons\":\"Counter_Buttons__1l3d2\",\"Max\":\"Counter_Max__25OMy\"};","import React from 'react';\n\ntype ButtonPropsType = {\n    title: string\n    disabled: boolean\n    onClick: () => void\n}\n\nfunction Button (props: ButtonPropsType) {\n\n    const {title, disabled, onClick} = props;\n\n    return (\n\n            <div>\n                <button disabled={disabled} onClick={onClick}>{title}</button>\n            </div>\n\n    );\n}\n\nexport default Button;\n","import React from 'react';\nimport style from \"./Counter.module.css\";\nimport Button from \"../Button/Button\";\n\ntype CounterPropsType = {\n    disabled: boolean\n    number: number | string\n    startNumber: number\n    maxNumber: number\n    changeNumber: () => void\n    resetNumber: () => void\n}\n\n\nfunction Counter(props: CounterPropsType) {\n\n\n    const {number, startNumber, maxNumber, changeNumber, resetNumber} = props;\n\n    function chooseClass() {\n        if (number >= maxNumber || number === 'enter correct values and press \"set\"') {\n            return style.Max\n        } else {\n            return \"\"\n        }\n    }\n\n    return (\n        <div className={style.Counter}>\n            <div className={style.Screen}>\n                <span className={chooseClass()}>\n                    {number}\n                </span>\n            </div>\n            <div className={style.Buttons}>\n                <Button disabled={number >= maxNumber || props.disabled} onClick={() => changeNumber()} title={\"Add\"}/>\n                <Button disabled={number === startNumber || props.disabled} onClick={() => resetNumber()} title={\"Reset\"}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Counter;\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport style from \"./Setting.module.css\";\r\nimport Button from \"../Button/Button\";\r\n\r\ntype SettingPropsType = {\r\n    giveDisabled: () => void\r\n    unDisabled: () => void\r\n    changeStartMaxNumber: (startNumber: number, maxNumber: number) => void\r\n    giveTopic: () => void\r\n    giveError: () => void\r\n}\r\n\r\nfunction Setting(props: SettingPropsType) {\r\n\r\n    const [startNumber, setStartNumber] = useState<number>(0)\r\n    const [maxNumber, setMaxNumber] = useState<number>(5)\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [disabled, setDisabled] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        let newStartNumber = localStorage.getItem(\"startNumber\")\r\n        let newMaxNumber = localStorage.getItem(\"maxNumber\")\r\n        if (newStartNumber && newMaxNumber) {\r\n            setStartNumber(JSON.parse(newStartNumber))\r\n            setMaxNumber(JSON.parse(newMaxNumber))\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"startNumber\", JSON.stringify(startNumber))\r\n    }, [startNumber])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"maxNumber\", JSON.stringify(maxNumber))\r\n    }, [maxNumber])\r\n\r\n    const changeStartNumber = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if ((+(e.currentTarget.value)) < 0) {\r\n            setStartNumber(+(e.currentTarget.value))\r\n            setError(true)\r\n        } else {\r\n            setStartNumber(+(e.currentTarget.value))\r\n            setError(false)\r\n        }\r\n        setDisabled(false)\r\n        giveDisabled();\r\n    }\r\n    const changeMaxNumber = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if ((+(e.currentTarget.value)) < 0) {\r\n            setMaxNumber(+(e.currentTarget.value))\r\n            setError(true)\r\n        } else {\r\n            setMaxNumber(+(e.currentTarget.value))\r\n            setError(false)\r\n        }\r\n        setDisabled(false)\r\n        giveDisabled();\r\n    }\r\n\r\n    const changeStartMaxNumber = () => props.changeStartMaxNumber(startNumber, maxNumber)\r\n    const giveTopic = () => props.giveTopic()\r\n    const giveError = () => props.giveError()\r\n    const giveDisabled = () => props.giveDisabled()\r\n    const unDisabled = () => props.unDisabled()\r\n\r\n    if (startNumber > maxNumber) {\r\n        giveError()\r\n    }\r\n\r\n    return (\r\n        <div className={style.Setting}>\r\n            <div className={style.Screen}>\r\n                <div>\r\n                    max value: <input\r\n                    className={(maxNumber < 0) || (maxNumber < startNumber) ? style.Error : \"\"}\r\n                    type=\"number\"\r\n                    value={maxNumber}\r\n                    onChange={changeMaxNumber}\r\n                    onClick={error ? giveError : giveTopic}\r\n                />\r\n                </div>\r\n                <div>\r\n                    start value: <input\r\n                    className={(startNumber < 0) || (startNumber > maxNumber) ? style.Error : \"\"}\r\n                    type=\"number\"\r\n                    value={startNumber}\r\n                    onChange={changeStartNumber}\r\n                    onClick={error ? giveError : giveTopic}\r\n                />\r\n                </div>\r\n            </div>\r\n            <div className={style.Buttons}>\r\n                <Button disabled={(startNumber < 0 || maxNumber < 0) || (startNumber > maxNumber) || disabled}\r\n                        onClick={() => {\r\n                            changeStartMaxNumber();\r\n                            unDisabled();\r\n                            setDisabled(true);\r\n                        }}\r\n                        title={\"Set\"}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Setting;\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Counter from \"./Components/Counter/Counter\";\nimport Setting from \"./Components/Setting/Setting\";\n\nfunction App() {\n\n    const [number, setNumber] = useState<number | string>(0)\n    const [startNumber, setStartNumber] = useState<number>(0)\n    const [maxNumber, setMaxNumber] = useState<number>(5)\n    const [disabled, setDisabled] = useState<boolean>(false)\n\n    function changeStartMaxNumber(startNumber: number, maxNumber: number) {\n        setNumber(startNumber)\n        setStartNumber(startNumber)\n        setMaxNumber(maxNumber)\n    }\n\n    function changeNumber() {\n        let newNumber = +number + 1;\n        if (newNumber <= maxNumber) {\n            setNumber(newNumber)\n        }\n    }\n\n    function resetNumber() {\n        setNumber(startNumber);\n    }\n\n    function giveTopic() {\n        setNumber('enter values and press \"set\"')\n    }\n\n    function giveError() {\n        setNumber('enter correct values and press \"set\"')\n    }\n\n    function giveDisabled() {\n        setDisabled(true)\n    }\n\n    function unDisabled() {\n        setDisabled(false)\n    }\n\n\n    return (\n        <div className=\"App\">\n            <Counter\n                disabled={disabled}\n                number={number}\n                startNumber={startNumber}\n                maxNumber={maxNumber}\n                changeNumber={changeNumber}\n                resetNumber={resetNumber}/>\n            <Setting\n                giveDisabled={giveDisabled}\n                unDisabled={unDisabled}\n                changeStartMaxNumber={changeStartMaxNumber}\n                giveTopic={giveTopic}\n                giveError={giveError}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}